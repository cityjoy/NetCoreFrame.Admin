@using CoreFrame.Entity;
@using CoreFrame.Entity.ArticleManage;
@using CoreFrame.Entity.AttachmentManage;
@using CoreFrame.Util;

@{
    Layout = "~/Views/Shared/_Layout_List_js.cshtml";

    var obj = (ArticleDto)Model;
    var objStr = Html.Raw(obj.ToJson());

    <script type="text/javascript" src="~/Scripts/kindeditor/kindeditor-min.js"></script>
    <style type="text/css">

        a {
            text-decoration: none;
            outline: none;
            color: #2cb5f3;
        }

        h1 {
            font-family: "微软雅黑";
            font-weight: normal;
        }

        .btn {
            display: inline-block;
            *display: inline;
            padding: 4px 12px;
            margin-bottom: 0;
            *margin-left: .3em;
            font-size: 14px;
            line-height: 20px;
            color: #333333;
            text-align: center;
            text-shadow: 0 1px 1px rgba(255, 255, 255, 0.75);
            vertical-align: middle;
            cursor: pointer;
            background-color: #f5f5f5;
            *background-color: #e6e6e6;
            background-image: -moz-linear-gradient(top, #ffffff, #e6e6e6);
            background-image: -webkit-gradient(linear, 0 0, 0 100%, from(#ffffff), to(#e6e6e6));
            background-image: -webkit-linear-gradient(top, #ffffff, #e6e6e6);
            background-image: -o-linear-gradient(top, #ffffff, #e6e6e6);
            background-image: linear-gradient(to bottom, #ffffff, #e6e6e6);
            background-repeat: repeat-x;
            border: 1px solid #cccccc;
            *border: 0;
            border-color: #e6e6e6 #e6e6e6 #bfbfbf;
            border-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);
            border-bottom-color: #b3b3b3;
            -webkit-border-radius: 4px;
            -moz-border-radius: 4px;
            border-radius: 4px;
            filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffffff', endColorstr='#ffe6e6e6', GradientType=0);
            filter: progid:DXImageTransform.Microsoft.gradient(enabled=false);
            *zoom: 1;
            -webkit-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2), 0 1px 2px rgba(0, 0, 0, 0.05);
            -moz-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2), 0 1px 2px rgba(0, 0, 0, 0.05);
            box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2), 0 1px 2px rgba(0, 0, 0, 0.05);
        }

            .btn:hover,
            .btn:focus,
            .btn:active,
            .btn.active,
            .btn.disabled,
            .btn[disabled] {
                color: #333333;
                background-color: #e6e6e6;
                *background-color: #d9d9d9;
            }

            .btn:active,
            .btn.active {
                background-color: #cccccc \9;
            }

            .btn:first-child {
                *margin-left: 0;
            }

            .btn:hover,
            .btn:focus {
                color: #333333;
                text-decoration: none;
                background-position: 0 -15px;
                -webkit-transition: background-position 0.1s linear;
                -moz-transition: background-position 0.1s linear;
                -o-transition: background-position 0.1s linear;
                transition: background-position 0.1s linear;
            }

            .btn:focus {
                outline: thin dotted #333;
                outline: 5px auto -webkit-focus-ring-color;
                outline-offset: -2px;
            }

            .btn.active,
            .btn:active {
                background-image: none;
                outline: 0;
                -webkit-box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.15), 0 1px 2px rgba(0, 0, 0, 0.05);
                -moz-box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.15), 0 1px 2px rgba(0, 0, 0, 0.05);
                box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.15), 0 1px 2px rgba(0, 0, 0, 0.05);
            }

            .btn.disabled,
            .btn[disabled] {
                cursor: default;
                background-image: none;
                opacity: 0.65;
                filter: alpha(opacity=65);
                -webkit-box-shadow: none;
                -moz-box-shadow: none;
                box-shadow: none;
            }
    </style>

}

<form id="dataForm" enctype="multipart/form-data" class="easyui-form" method="post" data-options="novalidate:true">
    <table class="table_base">
        <colgroup>
            <col style="width:80px;" />
        </colgroup>
        <tbody>

            <tr>
                <th>标题</th>
                <td>
                    <input name="Title" value="@obj.Title" class="easyui-textbox" data-options="width:'500px',required:true">
                </td>
            </tr>
            <tr>
                <th>标签</th>

                <td class="pretty-checkbox-mutiline">
                    @{ List<Tag> tagList = ViewBag.TagList;
                        foreach (var item in tagList)
                        {
                            <input type="checkbox" name="TagIdList"    value="@item.Id" @(obj.TagIdList.Contains(item.Id.ToString()) == true ? "checked=\"checked\"" : "") />
                            <i></i><span class="text">@item.TagName</span>
                        }
                    }

                    @*<input name="TagIdList" id="tags" type="hidden" value="@obj.TagIdList" />*@

                </td>

            </tr>
            <tr>
                <th>是否发布</th>
                <td>
                    <input type="radio" id="isPublish" name="IsPublish" @(obj.IsPublish == true ? "checked='checked'" : "") value='true'>是
                    <input type="radio" id="isPublish" name="IsPublish" @(obj.IsPublish == false ? "checked='checked'" : "") value='false'>否
                </td>
            </tr>
            <tr>
                <th>封面</th>
                <td id="Cover">
                    @if (obj.Cover.IsNullOrEmpty() == false)
                    {
                        <img id="articleCover" src="@(Vars.FILESTORE_SITE + obj.Cover)" />
                    }
                    else
                    {
                        <img id="articleCover" src="~/default.jpg" />
                    }

                    <input type="hidden" id="cover" name="Cover" value="@(obj.Cover!=null?Vars.FILESTORE_SITE + obj.Cover:"")">
                </td>
            </tr>
            <tr>
                <th>浏览数</th>
                <td>
                    <input name="PageView" value="@obj.PageView" class="easyui-textbox" data-options="width:'200px',required:true">
                </td>
            </tr>
            <tr>
                <th>内容</th>
                <td>
                    <textarea id="txtContent" rows="12">@Html.Raw(obj.Content)</textarea>
                </td>
            </tr>
            <tr>
                <td>
                    <label>附加图片:</label>
                </td>
                <td>
                    <div>
                        <table id="AttachmentListContainer">

                            @{
                                List<Attachment> aList = ViewBag.AttachmentList;
                                foreach (var a in aList)
                                {
                                    <tr>

                                        <td>
                                            @if (
string.Compare(a.FileExt, ".jpg", true) == 0
||
string.Compare(a.FileExt, ".png", true) == 0
||
string.Compare(a.FileExt, ".gif", true) == 0
||
string.Compare(a.FileExt, ".bmp", true) == 0
||
string.Compare(a.FileExt, ".ico", true) == 0
||
string.Compare(a.FileExt, ".jpeg", true) == 0
)
                                            {
                                                <a href="javascript:void(0)" onclick="SetArticleImage('@(Vars.FILESTORE_SITE + a.Thumb)');return false;"><img src="@(Vars.FILESTORE_SITE + a.Thumb)" /></a>
                                            }

                                        </td>
                                        <td>
                                            <p> <a class="imgdata" href="@(Vars.FILESTORE_SITE + a.SavePath)" data-dir="@a.Directory" data-name="@a.Name" data-thumb="@(Vars.FILESTORE_SITE + a.Thumb)" target="_blank">@a.Name</a></p>
                                            @if (
string.Compare(a.FileExt, ".jpg", true) == 0
||
string.Compare(a.FileExt, ".png", true) == 0
||
string.Compare(a.FileExt, ".gif", true) == 0
||
string.Compare(a.FileExt, ".bmp", true) == 0
||
string.Compare(a.FileExt, ".ico", true) == 0
||
string.Compare(a.FileExt, ".jpeg", true) == 0
)
                                            {
                                                <p>  <a href="javascript:void(0)" onclick="SetArticleImage('@(Vars.FILESTORE_SITE + a.Thumb)');return false;">[设为文章缩略图]</a></p>
                                            }
                                            <p> <a href="javascript:void(0)" onclick="InsertAttachmentToEditor('txtContent', '@a.Name}', '@a.FileExt', '@(Vars.FILESTORE_SITE + a.SavePath)');return false;">[插入正文]</a></p>
                                            <p> <a href="javascript:void(0)" onclick="DeleteAttachment($(this),@a.Id,'@a.Directory');return false;">[删除]</a></p>
                                        </td>
                                    </tr>
                                }
                            }
                        </table>
                        <input type="hidden" id="Attachments" name="Attachments" value="@obj.Attachments" />
                    </div>
                    <div>
                        <a id="openUploadForm" class="easyui-linkbutton" data-options="iconCls:'icon-add'">上传文件窗</a>

                    </div>
                </td>
            </tr>
        </tbody>
    </table>
</form>

<!--style给定宽度可以影响编辑器的最终宽度-->

@section foottoolbar{
    <a id="saveForm" href="javascript:;" class="easyui-linkbutton" data-options="iconCls:'icon-save'">保存</a>
}

<script>
    var rootUrl = '@Url.Content("~/")';
    var theEntity = @objStr;
    var HtmlEditors = {};
    /*
    创建一个可视化编辑器
    */
    function CreateHtmlEditor(txtId) {
        if (typeof (KindEditor) != 'undefined') {
            KindEditor.ready(function (K) {
                HtmlEditors[txtId] = K.create('textarea[id="' + txtId + '"]', {
                    width:'500px',
                    height:'400px',
                    allowFileManager: false,
                    allowImageUpload: false,
                    items: [
                        'formatblock', 'fontname', 'fontsize', '|', 'forecolor', 'hilitecolor', '|', 'bold', 'italic', 'underline', 'strikethrough', 'removeformat', '|', 'justifyleft', 'justifycenter', 'justifyright', 'insertorderedlist', 'insertunorderedlist', '|', 'link', 'unlink', 'anchor', 'subscript', 'superscript', 'table', '|', 'clearhtml',
                        '/', 'emoticons', 'image', 'flash', 'media', 'code', 'quote', 'baidumap', '|', 'hr', 'lineheight', 'plainpaste', 'wordpaste', '|', 'source', 'fullscreen'
                    ],
                    afterCreate: function () {
                        this.sync();
                    },
                    afterBlur: function () {
                        this.sync();
                    }
                });
            });
        }
        else {
            alert('未引用kindeditor组件！');
        }
    }

    /*
    插件附件至编辑器
    */
    function InsertAttachmentToEditor(txtId, name, ext, url) {
        if (typeof (KindEditor) != 'undefined') {
            var editor = HtmlEditors[txtId];
            var fullName = name;
            var html = '';
            switch (ext.toLowerCase()) {
                case ".png":
                case ".jpg":
                case ".gif":
                    html = '<a href="' + url + '" class="post-image-link" target="_blank"><img src="' + url + '" alt="' + fullName + '" title="' + fullName + '" class="post-image" /></a>';
                    break;
                default:
                    html = '<a href="' + url + '" class="post-attach ext-' + ext + '" target="_blank">' + fullName + '</a>';
                    break;
            }

            editor.insertHtml(html);
        }
        else {
            alert('未引用kindeditor组件！');
        }
    }
    /*设置封面*/
    function SetArticleImage(url) {
        $('#articleCover').attr("src", url);
        $('#cover').val(url);
    }
   /*请求删除附件*/
        function DeleteAttachment(obj,attachmentId, path) {
            dialogComfirm('确认删除吗？', function () {
                $.postJSON(rootUrl + 'AttachmentManage/Attachment/DeleteArticelFile', { attachmentId: attachmentId, path: path }, function (resJson) {
                    if (resJson.Success) {

                        obj.parent().parent().parent('tr').remove();
                        dialogMsg('删除成功!');
                    }
                    else {
                        dialogError(resJson.Msg);
                    }
                });
            });
        }

    $(function () {

            //原始内容
        CreateHtmlEditor("txtContent");
        //ParseListTemplate('AttachmentListContainer', 'AttachmentItemTemplate', AttachmentListJson);

        $('#openUploadForm').click(function () {
            dialogOpen({
                id: 'UploadFileForm',
                title: '上传文件',
                width: '500',
                height: '200',
                url: '/AttachmentManage/Attachment/UploadFileForm?articleId=' + theEntity.Id,
            });
        });
        $('#saveForm').click(function () {
            if (!$('#dataForm').form('enableValidation').form('validate'))
                return;
            var imgdatas = $('#AttachmentListContainer').find('.imgdata');
            var attachments = "";
            var values = [];
            if (imgdatas.length > 0) {

                imgdatas.each(function (i, item) {
                    var path = $(this).attr('href');
                    var thumbpath = $(this).attr('data-thumb');
                    var v = dir + '&' + path;;
                    var dir = $(this).attr('data-dir');
                    var name = $(this).attr('data-name');
                    var v = dir + '&' + path + '&' + thumbpath + '&' + name;
                    values.push(v);
                });
            }
            attachments = values.join(',')
            $('#Attachments').val(attachments);
            //var tags = [];
            //$("input:checkbox[name='TagIdList']:checked").each(function (index, item) {
            //    tags.push($(this).val());
            //});
            //$('#tags').val(tags.join(',') + ',');
            var formValues = $('#dataForm').getValues();
            $.extend(theEntity, formValues);
            var editorIntroduction = HtmlEditors["txtContent"];
            var content = editorIntroduction.html();
            theEntity['Content'] = content;
            $.postJSON(rootUrl + 'ArticleManage/Article/SaveData', theEntity, function (resJson) {

                if (resJson.Success) {
                    parent.dialogMsg('保存成功!');
                    parent.$('#dataTable').datagrid('reload');
                    parent.dialogClose('form');
                }
                else {
                    parent.dialogMsg(resJson.Msg);
                }
            });
        });
    });

</script>
